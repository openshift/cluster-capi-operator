apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.openshift.io: https://github.com/openshift/api/pull/XXXX
    api.openshift.io/merged-by-featuregates: "true"
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
  name: crdcompatibilityrequirements.operator.openshift.io
spec:
  group: operator.openshift.io
  names:
    kind: CRDCompatibilityRequirement
    listKind: CRDCompatibilityRequirementList
    plural: crdcompatibilityrequirements
    singular: crdcompatibilityrequirement
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          CRDCompatibilityRequirement expresses a set of requirements on a target CRD.
          It is used to ensure compatibility between different actors using the same
          CRD.

          Compatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec is the specification of the desired behavior of the
              CRD Compatibility Requirement.
            properties:
              compatibilitySchema:
                description: |-
                  compatibilitySchema defines the schema used by crdSchemaValidation and objectSchemaValidation.
                  This field is required.
                properties:
                  additionalVersions:
                    description: |-
                      additionalVersions is a set of versions to require in addition to those discovered by requireVersions.
                      Overlap with requireVersions is explicitly permitted.
                    items:
                      maxLength: 255
                      minLength: 1
                      type: string
                    maxItems: 255
                    type: array
                    x-kubernetes-list-type: set
                  crdYAML:
                    description: |-
                      crdYAML contains the complete YAML document of the CRD from transport config map.
                      This field is required.
                    maxLength: 1572864
                    minLength: 1
                    type: string
                  excludeFields:
                    description: |-
                      excludeFields is a set of fields in the yaml which will not be validated by either
                      crdSchemaValidation or objectSchemaValidation.
                      FIXME(chrischdi): explain the format which is
                    items:
                      maxLength: 8192
                      minLength: 1
                      type: string
                    maxItems: 1024
                    type: array
                    x-kubernetes-list-type: set
                  requireVersions:
                    description: |-
                      requireVersions specifies which versions we will automatically extract from the yaml and require.
                      Valid options are:
                        StorageOnly - only storage version(s) required for compatibility. Users can create/update
                          objects using any served version. additionalVersions are applied on top of this.
                        All - all versions defined in the CRD are required for compatibility.
                      This field is required.
                    enum:
                    - StorageOnly
                    - All
                    type: string
                required:
                - crdYAML
                - requireVersions
                type: object
              crdSchemaValidation:
                description: |-
                  crdSchemaValidation ensures that updates to the installed CRD are compatible with this compatibility requirement.
                  This field is optional.
                properties:
                  action:
                    description: |-
                      action determines whether violations are not admitted (Enforce) or admitted with an API warning (Warn).
                      Valid options are:
                        Enforce - incompatible CRDs will be rejected and not admitted to the cluster.
                        Warn - incompatible CRDs will be allowed but a warning will be generated in the API response.
                      This field is required.
                    enum:
                    - Enforce
                    - Warn
                    type: string
                required:
                - action
                type: object
              objectSchemaValidation:
                description: |-
                  objectSchemaValidation ensures that matching objects conform to compatibilitySchema.
                  This field is optional.
                properties:
                  action:
                    description: |-
                      action determines whether violations are not admitted (Enforce) or admitted with an API warning (Warn).
                      Valid options are:
                        Enforce - incompatible Objects will be rejected and not admitted to the cluster.
                        Warn - incompatible Objects will be allowed but a warning will be generated in the API response.
                      This field is required.
                    enum:
                    - Enforce
                    - Warn
                    type: string
                  matchConditions:
                    description: |-
                      matchConditions defines the matchConditions field of the resulting ValidatingWebhookConfiguration.
                      FIXME(chrischdi): should we embed this type? Or maintain our own copy of MatchCondition?
                    items:
                      description: MatchCondition represents a condition which must
                        by fulfilled for a request to be sent to a webhook.
                      properties:
                        expression:
                          description: |-
                            Expression represents the expression which will be evaluated by CEL. Must evaluate to bool.
                            CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables:

                            'object' - The object from the incoming request. The value is null for DELETE requests.
                            'oldObject' - The existing object. The value is null for CREATE requests.
                            'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest).
                            'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request.
                              See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz
                            'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the
                              request resource.
                            Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/

                            Required.
                          type: string
                        name:
                          description: |-
                            Name is an identifier for this match condition, used for strategic merging of MatchConditions,
                            as well as providing an identifier for logging purposes. A good name should be descriptive of
                            the associated expression.
                            Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and
                            must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or
                            '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an
                            optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName')

                            Required.
                          type: string
                      required:
                      - expression
                      - name
                      type: object
                    maxItems: 64
                    minItems: 1
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  namespaceSelector:
                    description: namespaceSelector defines the namespaceSelector field
                      of the resulting ValidatingWebhookConfiguration.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  objectSelector:
                    description: objectSelector defines the objectSelector field of
                      the resulting ValidatingWebhookConfiguration.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - action
                type: object
            required:
            - compatibilitySchema
            type: object
          status:
            description: status is the most recently observed status of the CRD Compatibility
              Requirement.
            minProperties: 1
            properties:
              conditions:
                description: |-
                  conditions is a list of conditions and their status.
                  Known condition types are Progressing, Admitted, Compatible.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 16
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              crdName:
                description: |-
                  crdName is the name of the target CRD. The target CRD is not required to
                  exist, as we may legitimately place requirements on it before it is
                  created.  The observed CRD is given in status.observedCRD, which will be
                  empty if no CRD is observed.
                  This field is optional.
                  crdRef must be at most 253 characters in length and must consist only of lower-case alphanumeric characters, periods (.) and hyphens (-). Each period separated label must start and end with an alphanumeric character and be at most 63 characters in length.
                maxLength: 253
                minLength: 1
                type: string
                x-kubernetes-validations:
                - message: a lowercase RFC 1123 subdomain must consist of lower case
                    alphanumeric characters, '-' or '.', and must start and end with
                    an alphanumeric character.
                  rule: '!format.dns1123Subdomain().validate(self).hasValue()'
              observedCRD:
                description: |-
                  observedCRD documents the uid and generation of the CRD object when the current status was written.
                  This field will not be emitted if the target CRD does not exist or could not be retrieved.
                minProperties: 1
                properties:
                  generation:
                    description: generation is the observed generation of the CRD.
                    format: int64
                    minimum: 1
                    type: integer
                  uid:
                    description: uid is the uid of the observed CRD.
                    format: uuid
                    maxLength: 36
                    minLength: 1
                    type: string
                    x-kubernetes-validations:
                    - message: uid must be a valid UUID. It must consist only of lower-case
                        hexadecimal digits, in 5 hyphenated blocks, where the blocks
                        are of length 8-4-4-4-12 respectively.
                      rule: '!format.uuid().validate(self).hasValue()'
                required:
                - generation
                - uid
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
