// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	operatorv1alpha1 "github.com/openshift/api/operator/v1alpha1"
	admissionregistrationv1 "k8s.io/api/admissionregistration/v1"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration represents a declarative configuration of the CRDCompatibilityRequirementSpecObjectValidation type for use
// with apply.
type CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration struct {
	Action            *operatorv1alpha1.CRDAdmitAction         `json:"action,omitempty"`
	NamespaceSelector *v1.LabelSelectorApplyConfiguration      `json:"namespaceSelector,omitempty"`
	ObjectSelector    *v1.LabelSelectorApplyConfiguration      `json:"objectSelector,omitempty"`
	MatchConditions   []admissionregistrationv1.MatchCondition `json:"matchConditions,omitempty"`
}

// CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration constructs a declarative configuration of the CRDCompatibilityRequirementSpecObjectValidation type for use with
// apply.
func CRDCompatibilityRequirementSpecObjectValidation() *CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration {
	return &CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration{}
}

// WithAction sets the Action field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Action field is set to the value of the last call.
func (b *CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration) WithAction(value operatorv1alpha1.CRDAdmitAction) *CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration {
	b.Action = &value
	return b
}

// WithNamespaceSelector sets the NamespaceSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NamespaceSelector field is set to the value of the last call.
func (b *CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration) WithNamespaceSelector(value *v1.LabelSelectorApplyConfiguration) *CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration {
	b.NamespaceSelector = value
	return b
}

// WithObjectSelector sets the ObjectSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObjectSelector field is set to the value of the last call.
func (b *CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration) WithObjectSelector(value *v1.LabelSelectorApplyConfiguration) *CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration {
	b.ObjectSelector = value
	return b
}

// WithMatchConditions adds the given value to the MatchConditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the MatchConditions field.
func (b *CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration) WithMatchConditions(values ...admissionregistrationv1.MatchCondition) *CRDCompatibilityRequirementSpecObjectValidationApplyConfiguration {
	for i := range values {
		b.MatchConditions = append(b.MatchConditions, values[i])
	}
	return b
}
