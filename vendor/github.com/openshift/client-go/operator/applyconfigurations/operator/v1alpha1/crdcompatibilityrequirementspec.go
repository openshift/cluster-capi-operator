// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// CRDCompatibilityRequirementSpecApplyConfiguration represents a declarative configuration of the CRDCompatibilityRequirementSpec type for use
// with apply.
type CRDCompatibilityRequirementSpecApplyConfiguration struct {
	CompatibilitySchema    *CompatibilitySchemaApplyConfiguration    `json:"compatibilitySchema,omitempty"`
	CRDSchemaValidation    *CRDSchemaValidationApplyConfiguration    `json:"crdSchemaValidation,omitempty"`
	ObjectSchemaValidation *ObjectSchemaValidationApplyConfiguration `json:"objectSchemaValidation,omitempty"`
}

// CRDCompatibilityRequirementSpecApplyConfiguration constructs a declarative configuration of the CRDCompatibilityRequirementSpec type for use with
// apply.
func CRDCompatibilityRequirementSpec() *CRDCompatibilityRequirementSpecApplyConfiguration {
	return &CRDCompatibilityRequirementSpecApplyConfiguration{}
}

// WithCompatibilitySchema sets the CompatibilitySchema field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CompatibilitySchema field is set to the value of the last call.
func (b *CRDCompatibilityRequirementSpecApplyConfiguration) WithCompatibilitySchema(value *CompatibilitySchemaApplyConfiguration) *CRDCompatibilityRequirementSpecApplyConfiguration {
	b.CompatibilitySchema = value
	return b
}

// WithCRDSchemaValidation sets the CRDSchemaValidation field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CRDSchemaValidation field is set to the value of the last call.
func (b *CRDCompatibilityRequirementSpecApplyConfiguration) WithCRDSchemaValidation(value *CRDSchemaValidationApplyConfiguration) *CRDCompatibilityRequirementSpecApplyConfiguration {
	b.CRDSchemaValidation = value
	return b
}

// WithObjectSchemaValidation sets the ObjectSchemaValidation field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObjectSchemaValidation field is set to the value of the last call.
func (b *CRDCompatibilityRequirementSpecApplyConfiguration) WithObjectSchemaValidation(value *ObjectSchemaValidationApplyConfiguration) *CRDCompatibilityRequirementSpecApplyConfiguration {
	b.ObjectSchemaValidation = value
	return b
}
