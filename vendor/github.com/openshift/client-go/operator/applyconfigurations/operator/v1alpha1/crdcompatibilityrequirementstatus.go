// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// CRDCompatibilityRequirementStatusApplyConfiguration represents a declarative configuration of the CRDCompatibilityRequirementStatus type for use
// with apply.
type CRDCompatibilityRequirementStatusApplyConfiguration struct {
	Conditions  []v1.ConditionApplyConfiguration `json:"conditions,omitempty"`
	ObservedCRD *ObservedCRDApplyConfiguration   `json:"observedCRD,omitempty"`
	CRDName     *string                          `json:"crdName,omitempty"`
}

// CRDCompatibilityRequirementStatusApplyConfiguration constructs a declarative configuration of the CRDCompatibilityRequirementStatus type for use with
// apply.
func CRDCompatibilityRequirementStatus() *CRDCompatibilityRequirementStatusApplyConfiguration {
	return &CRDCompatibilityRequirementStatusApplyConfiguration{}
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *CRDCompatibilityRequirementStatusApplyConfiguration) WithConditions(values ...*v1.ConditionApplyConfiguration) *CRDCompatibilityRequirementStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithObservedCRD sets the ObservedCRD field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedCRD field is set to the value of the last call.
func (b *CRDCompatibilityRequirementStatusApplyConfiguration) WithObservedCRD(value *ObservedCRDApplyConfiguration) *CRDCompatibilityRequirementStatusApplyConfiguration {
	b.ObservedCRD = value
	return b
}

// WithCRDName sets the CRDName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CRDName field is set to the value of the last call.
func (b *CRDCompatibilityRequirementStatusApplyConfiguration) WithCRDName(value string) *CRDCompatibilityRequirementStatusApplyConfiguration {
	b.CRDName = &value
	return b
}
